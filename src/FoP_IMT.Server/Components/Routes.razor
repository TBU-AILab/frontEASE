@inject AppSettings settings
@inject NavigationManager navigation
@inject IResourceHandler resourceHandler
@inject IResourceAppService resourceAppService


<Router AppAssembly="typeof(Program).Assembly" AdditionalAssemblies="new[] { typeof(Client._Imports).Assembly }">
    <Found Context="routeData">
        @if (isResourceHandlerInitialized)
        {
            <AuthorizeRouteView RouteData="routeData" DefaultLayout="typeof(MainLayout)">
                <NotAuthorized>
                    <RedirectToLogin />
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="routeData" Selector="h1" />
        }
        else
        {
            <Container Fluid Display="Display.Flex" Height="Height.Is100">
                <Row Class="full-width" Padding="Padding.Is5.FromTop">
                    <Column ColumnSize="ColumnSize.IsFull" Padding="Padding.Is5.FromTop" Class="full-width" TextAlignment="TextAlignment.Center">
                        <SpinnerButton TextColor="TextColor.Dark" TextSize="TextSize.Heading2" />
                    </Column>
                </Row>
            </Container>
        }
    </Found>
</Router>


@code {
    private bool isResourceHandlerInitialized;

    protected override async Task OnInitializedAsync()
    {
        resourceHandler.InitLanguage(settings.EnvironmentSettings!.LanguageCode!);

        var resources = await resourceAppService.LoadAll(resourceHandler.CurrentLanguage);
        resourceHandler.InitResources(resources);

        isResourceHandlerInitialized = true;
        await base.OnInitializedAsync();
    }
}