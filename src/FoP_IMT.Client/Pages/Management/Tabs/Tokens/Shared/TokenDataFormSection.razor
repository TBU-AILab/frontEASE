@inject IResourceHandler resourceHandler
@inject IUIService uiService
@inject IUIManager uiManager

<Fields>
    <Validation>

        <Validation>
            <Field ColumnSize="@(FullWidthFields ? ColumnSize.IsFull : ColumnSize.Is5.OnWidescreen)">
                <FieldLabel For="@(GetElementIdByOperation(nameof(UserPreferenceTokenOptionDto.Name)))" RequiredIndicator>
                    @(resourceHandler.GetResource(AttributeExtensions.GetResourceFieldValue<UserPreferenceTokenOptionDto>(nameof(UserPreferenceTokenOptionDto.Name), PropertyDisplayResourceType.FIELD)))
                </FieldLabel>
                <TextEdit ElementId="@(GetElementIdByOperation(nameof(UserPreferenceTokenOptionDto.Name)))"
                          Role="TextRole.Text"
                          Placeholder="@(resourceHandler.GetResource(AttributeExtensions.GetResourceFieldValue<UserPreferenceTokenOptionDto>(nameof(UserPreferenceTokenOptionDto.Name), PropertyDisplayResourceType.PLACEHOLDER)))"
                          @bind-Text="@TokenModel.Name">
                    <Feedback>
                        <ValidationError Multiline="true" />
                    </Feedback>
                </TextEdit>
            </Field>
        </Validation>

        <Field ColumnSize="@(FullWidthFields ? ColumnSize.IsFull : ColumnSize.Is2.OnWidescreen)">
            <FieldLabel For="@(GetElementIdByOperation(nameof(UserPreferenceTokenOptionDto.Token)))" RequiredIndicator>
                @(resourceHandler.GetResource(AttributeExtensions.GetResourceFieldValue<UserPreferenceTokenOptionDto>(nameof(UserPreferenceTokenOptionDto.ConnectorType), PropertyDisplayResourceType.FIELD)))
            </FieldLabel>
            <Select TValue="string"
                    @bind-SelectedValue="@TokenModel.ConnectorType"
                    ElementId="@(GetElementIdByOperation(nameof(UserPreferenceTokenOptionDto.ConnectorType)))">
                <ChildContent>
                    <SelectItem Value="string.Empty" TextColor="TextColor.Black50">
                        @(resourceHandler.GetResource($"{UIConstants.Data}.{UIConstants.Generic}.{UIValueConstants.Empty}"))
                    </SelectItem>
                    @foreach (var connectorType in ConnectorTypes)
                    {
                        <SelectItem Value="@(connectorType.ShortName)">
                            @(connectorType.LongName)
                        </SelectItem>
                    }
                </ChildContent>
                <Feedback>
                    <ValidationError Multiline="true" />
                </Feedback>
            </Select>
        </Field>
    </Validation>

    <Validation>
        <Field ColumnSize="@(FullWidthFields ? ColumnSize.IsFull : ColumnSize.Is5.OnWidescreen)">
            <FieldLabel For="@(GetElementIdByOperation(nameof(UserPreferenceTokenOptionDto.Token)))" RequiredIndicator>
                @(resourceHandler.GetResource(AttributeExtensions.GetResourceFieldValue<UserPreferenceTokenOptionDto>(nameof(UserPreferenceTokenOptionDto.Token), PropertyDisplayResourceType.FIELD)))
            </FieldLabel>
            <TextEdit ElementId="@(GetElementIdByOperation(nameof(UserPreferenceTokenOptionDto.Token)))"
                      Role="TextRole.Text"
                      Placeholder="@(resourceHandler.GetResource(AttributeExtensions.GetResourceFieldValue<UserPreferenceTokenOptionDto>(nameof(UserPreferenceTokenOptionDto.Token), PropertyDisplayResourceType.PLACEHOLDER)))"
                      @bind-Text="@TokenModel.Token">
                <Feedback>
                    <ValidationError Multiline="true" />
                </Feedback>
            </TextEdit>
        </Field>
    </Validation>

    <Validation>
        <Field ColumnSize="ColumnSize.IsFull">
            <FieldLabel For="@(GetElementIdByOperation(nameof(UserPreferenceTokenOptionDto.Description)))">
                @(resourceHandler.GetResource(AttributeExtensions.GetResourceFieldValue<UserPreferenceTokenOptionDto>(nameof(UserPreferenceTokenOptionDto.Description), PropertyDisplayResourceType.FIELD)))
            </FieldLabel>
            <MemoEdit ElementId="@(GetElementIdByOperation(nameof(UserPreferenceTokenOptionDto.Description)))"
                      Placeholder="@(resourceHandler.GetResource(AttributeExtensions.GetResourceFieldValue<UserPreferenceTokenOptionDto>(nameof(UserPreferenceTokenOptionDto.Description), PropertyDisplayResourceType.PLACEHOLDER)))"
                      @bind-Text="@TokenModel.Description"
                      AutoSize="false"
                      Rows="3">
                <Feedback>
                    <ValidationError Multiline="true" />
                </Feedback>
            </MemoEdit>
        </Field>
    </Validation>

</Fields>

@code {

    [CascadingParameter]
    public UserPreferenceTokenOptionDto TokenModel { get; set; } = new();

    [CascadingParameter]
    public IList<TaskModuleNoValidationDto> ConnectorTypes { get; set; } = [];

    [Parameter]
    public DataOperation Operation { get; set; }

    [Parameter]
    public bool FullWidthFields { get; set; }

    private string GetElementIdByOperation(string elementBase) => VisualisationHelper.GetElementIdByOperation<UserPreferenceTokenOptionDto>(elementBase, Operation, null);
}