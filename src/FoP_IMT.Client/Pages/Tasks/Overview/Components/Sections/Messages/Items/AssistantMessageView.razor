@inject IResourceHandler resourceHandler
@inject IUIService uiService

<Container Fluid>
    <Row>
        <Column ColumnSize="ColumnSize.Is8.OnWidescreen.Is10.OnMobile" TextAlignment="TextAlignment.Start" Padding="Padding.Is0">
            <Card Border="Border.Is0" Class="cursor-pointer" @onclick="SelectMessageSolution">
                <MessageViewHeader />

                <CardBody Background="Background.Light" Class="throws-shadow" Border="@(Border.Is1.RoundedBottom.Primary)">
                    @if (!string.IsNullOrWhiteSpace(Message.Content))
                    {
                        @((MarkupString)Markdig.Markdown.ToHtml(Message.Content))
                    }

                    @{
                        var matchedSolution = Task.Solutions.SingleOrDefault(x => x.TaskMessageID == Message.ID);
                    }
                    @if (matchedSolution is not null)
                    {
                        var urlMetadata = matchedSolution.Metadata?.SingleOrDefault(x => x.Key == TaskMetadataConstants.Url);
                        @if (urlMetadata is not null)
                        {
                            <Divider Class="divider-section" Background="Background.Primary" Shadow="Shadow.Small" />
                            <Image Fluid Source=@(urlMetadata.Value) Text="@urlMetadata.Value" Loading />
                        }
                    }

                </CardBody>
                <MessageViewFooter />
            </Card>
        </Column>
    </Row>

</Container>

@code {
    [CascadingParameter]
    public TaskDto Task { get; set; } = new();

    [CascadingParameter]
    public TaskViewMetadataDto TaskMetadata { get; set; } = null!;

    [CascadingParameter]
    public TaskMessageDto Message { get; set; } = new();

    private void SelectMessageSolution()
    {
        TaskMetadata.SelectedMessageID =
        TaskMetadata.SelectedMessageID == Message.ID ? null : Message.ID;

        uiService.CallRequestRefresh();
    }
}
