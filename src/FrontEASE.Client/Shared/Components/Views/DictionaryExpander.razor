@inject AppSettings appSettings
@inject IResourceHandler resourceHandler
@inject IUIManager uiManager

<Row Padding="Padding.Is2" Border="Border.Is1.Rounded" Style="@($"border-color: {uiManager.Theme.BackgroundOptions.Light} !important;")" Shadow="Shadow.Small" Margin="MarginParam" TextOverflow="TextOverflow.Wrap">
    <Column ColumnSize="ColumnSize.IsFull" Display="Display.Flex" Class="justify-content-between align-items-center cursor-pointer" @onclick="@ChangeCollapseState" Padding="Padding.Is2" Shadow="Shadow.Small">
        <Div Display="Display.Flex" Width="Width.Is100" Class="justify-content-center">
            <Text TextWeight="TextWeight.Bold" Class="text-center">
                @DisplayName
            </Text>
        </Div>
        <Icon Name="@(!isSectionCollapsed ? IconName.AngleUp : IconName.AngleDown)" Style="@($"color: {uiManager.Theme.TextColorOptions.Primary} !important;")" IconSize="IconSize.x2" IconStyle="IconStyle.Solid" />
    </Column>

    @if (!isSectionCollapsed)
    {
        <Column ColumnSize="ColumnSize.Is3" Margin="Margin.Is2.FromTop">
            <Text>
                @(resourceHandler.GetResource($"{UIConstants.Data}.{UIConstants.Generic}.{UIConstants.Key}"))
            </Text>
        </Column>

        <Column ColumnSize="ColumnSize.Is9" Margin="Margin.Is2.FromTop">
            <Text>
                @(resourceHandler.GetResource($"{UIConstants.Data}.{UIConstants.Generic}.{UIConstants.Value}"))
            </Text>
        </Column>

        <Divider Class="divider-subsection" Shadow="Shadow.Small" style="@($"height: 2px !important; background-color: {uiManager.Theme.BackgroundOptions.Light};")" />

        @foreach (var param in Dictionary)
        {
            <Column ColumnSize="ColumnSize.Is3">
                <Text>
                    @param.Key:
                </Text>
            </Column>

            <Column ColumnSize="ColumnSize.Is9" Class="wrap-overflow-text">
                <Text TextWeight="TextWeight.Bold">
                    @param.Value
                </Text>
            </Column>

            @if(param.Key == TaskMetadataConstants.Url)
            {
                <Column ColumnSize="ColumnSize.IsFull">
                    <Text TextWeight="TextWeight.Bold">
                        <Image Fluid Source=@($"{appSettings!.IntegrationSettings!.PythonCore!.Server!.BaseUrl}/{param.Value}") Text="@param.Value" Loading />
                    </Text>
                </Column>
            }
        }
    }

</Row>

@code {
    [Parameter]
    public IList<TaskKeyValueItemDto> Dictionary { get; set; } = [];

    [Parameter]
    public IFluentSpacing MarginParam { get; set; } = null!;

    [Parameter]
    public string DisplayName { get; set; } = string.Empty;

    private bool isSectionCollapsed = true;

    private void ChangeCollapseState() => isSectionCollapsed = !isSectionCollapsed;
}