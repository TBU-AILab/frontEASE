@inject IResourceHandler resourceHandler
@inject IUIService uiService
@inject IUIManager uiManager

<Fields>
    <Validation>
        <Field ColumnSize="ColumnSize.Is11.OnWidescreen.Is10">
            <FieldLabel For="@(GetElementIdByOperation(nameof(TaskDuplicateActionRequestDto.Name)))" RequiredIndicator>
                @(resourceHandler.GetResource(AttributeExtensions.GetResourceFieldValue<TaskDuplicateActionRequestDto>(nameof(TaskDuplicateActionRequestDto.Name), PropertyDisplayResourceType.FIELD)))
            </FieldLabel>
            <TextEdit ElementId="@(GetElementIdByOperation(nameof(TaskDuplicateActionRequestDto.Name)))"
                      Role="TextRole.Text"
                      Placeholder="@(string.IsNullOrWhiteSpace(TaskInfo.Name) ? resourceHandler.GetResource(AttributeExtensions.GetResourceFieldValue<TaskDuplicateActionRequestDto>(nameof(TaskDuplicateActionRequestDto.Name), PropertyDisplayResourceType.PLACEHOLDER)) : TaskInfo.Name )"
                      @bind-Text="@CloneModel.Name">
                <Feedback>
                    <ValidationError Multiline="true" />
                </Feedback>
            </TextEdit>
        </Field>
    </Validation>

    <Field ColumnSize="ColumnSize.Is1.OnWidescreen.Is2">
        <FieldLabel>
            @(resourceHandler.GetResource($"{UIConstants.Data}.{UIConstants.Generic}.{UIValueConstants.Actions}"))
        </FieldLabel>
        <Div>
            <Tooltip Multiline="true" Text="@($"{resourceHandler.GetResource($"{UIConstants.Base}.{UIConstants.Generic}.{UIActionConstants.Use}.{UIStateConstants.Default}")} : \"{(string.IsNullOrWhiteSpace(TaskInfo.Name) ? resourceHandler.GetResource(AttributeExtensions.GetResourceFieldValue<TaskDuplicateActionRequestDto>(nameof(TaskDuplicateActionRequestDto.Name), PropertyDisplayResourceType.PLACEHOLDER)) : TaskInfo.Name)}\"")" Display="Display.InlineBlock">
                <Icon Class="action-icon-sm action-icon-success" Name="IconName.Paste" IconSize="IconSize.Default" IconStyle="IconStyle.Solid" Clicked="(() => FillDefaultName())" />
            </Tooltip>
        </Div>
    </Field>

    <Column ColumnSize="ColumnSize.IsFull">
        <Container Fluid>
            <Row>
                <Fields>
                    <FieldLabel For="@(GetElementIdByOperation(nameof(TaskDuplicateActionRequestDto.Copies)))" RequiredIndicator>
                        @($"{resourceHandler.GetResource(AttributeExtensions.GetResourceFieldValue<TaskDuplicateActionRequestDto>(nameof(TaskDuplicateActionRequestDto.Copies), PropertyDisplayResourceType.FIELD))}: {CloneModel.Copies}")
                    </FieldLabel>

                    <Validation>
                        <Field Display="Display.None.InlineBlock.OnWidescreen" ColumnSize="ColumnSize.Is2.OnWidescreen">

                            <NumericEdit @bind-Value="@CloneModel.Copies" Step="1" Min="1" Max="32">
                                <Feedback>
                                    <ValidationError Multiline="true" />
                                </Feedback>
                            </NumericEdit>
                        </Field>
                    </Validation>

                    <Validation>
                        <Field ColumnSize="ColumnSize.Is10.OnWidescreen">
                            <Slider ElementId="@(GetElementIdByOperation(nameof(TaskDuplicateActionRequestDto.Copies)))"
                                    Background="Background.Transparent"
                                    @bind-Value="@CloneModel.Copies"
                                    Step="1" Min="1" Max="32">
                                <Feedback>
                                    <ValidationError Multiline="true" />
                                </Feedback>
                            </Slider>
                        </Field>
                    </Validation>

                </Fields>
            </Row>
        </Container>
    </Column>
</Fields>

@code {
    [CascadingParameter]
    public TaskInfoDto TaskInfo { get; set; } = new();

    [CascadingParameter]
    public TaskDuplicateActionRequestDto CloneModel { get; set; } = new();

    [CascadingParameter]
    public DataOperation Operation { get; set; }

    [Parameter]
    public bool FullWidthFields { get; set; }

    private string GetElementIdByOperation(string elementBase) => VisualisationHelper.GetElementIdByOperation<UserPreferenceTokenOptionDto>(elementBase, Operation, null);

    private void FillDefaultName()
    {
        var defaultValue = string.IsNullOrWhiteSpace(TaskInfo.Name) ?
            resourceHandler.GetResource(AttributeExtensions.GetResourceFieldValue<TaskDuplicateActionRequestDto>(nameof(TaskDuplicateActionRequestDto.Name), PropertyDisplayResourceType.PLACEHOLDER)) : TaskInfo.Name;

        CloneModel.Name = defaultValue;
    }
}