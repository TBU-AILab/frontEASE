@inject IMapper mapper
@inject IResourceHandler resourceHandler
@inject IUIManager uiManager

<ModalFooter Style="@($"background-color: {uiManager.Theme.BackgroundOptions.Secondary}; border-color: {uiManager.Theme.BackgroundOptions.Light} !important;")">
    <Container Fluid Padding="Padding.Is0">
        <Row Margin="Margin.Is0">
            <Column ColumnSize="ColumnSize.Is3.OnFullHD.Is4.OnWidescreen.Is5.OnMobile">
                <Button Clicked="@HideModal" Color="Color.Danger" Class="btn button btn-sized full-width" TextWeight="TextWeight.Bold">
                    @(resourceHandler.GetResource($"{UIConstants.Base}.{UIConstants.Generic}.{UIActionConstants.Close}"))
                </Button>
            </Column>
        </Row>
    </Container>
</ModalFooter>

@code {
    [CascadingParameter]
    public TaskDto Task { get; set; } = new();

    [CascadingParameter]
    public Modal Modal { get; set; } = new();

    private async Task HideModal()
    {
        var cleanModel = new TaskDto();
        mapper.Map(cleanModel, Task);

        await Modal.Hide();
    }
}