@inject IMapper mapper
@inject IUIManager uiManager

<Row Class="gx-0 margin-background-offset-top-1">
    <CardHeader Display="Display.Flex" Border="Border.RoundedZero" Style="@($"color: {uiManager.Theme.TextColorOptions.Primary}; background-color: {uiManager.Theme.BackgroundOptions.Secondary};")" Padding="Padding.Is2.FromEnd.Is2.FromStart">
        <Column ColumnSize="ColumnSize.Is12" TextAlignment="TextAlignment.End" Class="align-self-center">
            <Icon Class="action-icon action-icon-info" Name="IconName.Pen" IconSize="IconSize.Large" IconStyle="IconStyle.Solid" Clicked="@(() => ShowEditModal())" />
            <Icon Class="action-icon action-icon-danger" Name="IconName.Delete" IconSize="IconSize.Large" IconStyle="IconStyle.Solid" Clicked="@(() => ShowDeleteModal())" />
        </Column>
    </CardHeader>
</Row>

<UserEditModal @ref="@editModal"></UserEditModal>
<UserDeleteModal @ref="@deleteModal"></UserDeleteModal>

@code {
    private UserEditModal editModal { get; set; } = new();
    private UserDeleteModal deleteModal { get; set; } = new();

    private Task ShowEditModal() => editModal.ShowModal();
    private Task ShowDeleteModal() => deleteModal.ShowModal();
}